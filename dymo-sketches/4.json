∀ x : Dymo, Amplitude x < 1 / Duration x

{
  "@type":"ForAll",
  "quantifierVars":{"@id":"x", "type":"Dymo"},
  "body":{
    "@type":"LessThan",
    "left":{
      "@type":"FunctionalTerm",
      "termFunction":"Amplitude",
      "termArgs":"x"
    },
    "right":{
      "@type":"Division",
      "dividend":{"@type":"Constant", "value":1},
      "divisor":{
        "@type":"FunctionalTerm",
        "termFunction":"Duration",
        "termArgs":"x"
      }
    }
  }
}

∀ x : Dymo, Pitch x > 60 => Amplitude x < 1 / Duration x

ADD BINDINGS!!!! SHOULD WORK!! e.g. left = Var(a), bind(a,{"@type":"FunctionalTerm",...})

{
  "@type":"ForAll",
  "quantifierVars":{"name":"x", "type":"Dymo"},
  "body":{
    "@type":"IfThen",
    "antecedent":{
      "@type":"GreaterThan",
      "left":{
        "@type":"FunctionalTerm",
        "termFunction":"Pitch",
        "termArgs":"x"
      },
      "right":{
        "@type":"Constant",
        "value":60
      }
    },
    "consequent":{
      "@type":"LessThan",
      "left":{
        "@type":"FunctionalTerm",
        "termFunction":"Amplitude",
        "termArgs":"x"
      },
      "right":{
        "@type":"Division",
        "dividend":{
          "@type":"Constant",
          "value":1
        },
        "divisor":{
          "@type":"FunctionalTerm",
          "termFunction":"Duration",
          "termArgs":"x"
        }
      }
    }
  }
}

∀ x : Dymo, id x = "vocals", ∀ y : Dymo, id y in ["drums","bass"] => Amplitude x > Amplitude y



∀ x : Dymo, x in partOf(avgPerf), y : Parameter, y = deformParam,
  Onset(x) = (y * onset(first(x))) + ((1-y) * onset(second(x)))
  Amplitude(first(x)) = y
  Amplitude(second(x)) = 1-y

now the problem is that the playback mechanism doesnt play first/second


